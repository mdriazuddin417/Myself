// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  name       String
  email      String     @unique
  password   String?
  role       Role       @default(USER)
  phone      String
  picture    String?
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  posts      Post[]
  projects   Project[]
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCK
}

model Post {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  content       String
  excerpt       String
  featuredImage String?
  published     Boolean   @default(false)
  publishedAt   DateTime?
  readTime      Int
  views         Int       @default(0)
  tags          String[]
  authorId      String? // optional FK
  author        User?     @relation(fields: [authorId], references: [id], onDelete: SetNull)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Project {
  id              String        @id @default(cuid())
  title           String
  description     String
  longDescription String
  slug            String        @unique
  technologies    String[]
  githubUrl       String?
  liveUrl         String?
  images          String[]
  featured        Boolean       @default(false)
  status          ProjectStatus @default(PLANNED)
  startDate       DateTime
  endDate         DateTime?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userId          String?
  user            User?         @relation(fields: [userId], references: [id])
}

enum ProjectStatus {
  COMPLETED
  IN_PROGRESS
  PLANNED
}
